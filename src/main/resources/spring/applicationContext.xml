<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">
	
	<!-- dataSource配置 -->
	<!-- 1、加载db.properties文件 -->
	<context:property-placeholder location="classpath:db.properties"/>
	<!-- 2、配置dataSource -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driver}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>
	
	
	<!-- SqlSessionFactoryBean配置 -->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="mybatis/sqlMapConfig.xml"/>
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- mapper配置
		采用包扫描配置：要求：mapper.xml与mapper.java在同一目录下，且名称相同
	 -->
	 <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	 	<property name="basePackage" value="com.spingmybatis02.mapper"/>
	 </bean>
	
	<!-- service配置
		采用包扫描
	 -->	 
	 <context:component-scan base-package="com.springmybais02.service.imp"/>

	<!-- aop配置 -->
	<!-- 1、拦截器配置 -->
	<bean id="userInterceptor" class="com.springmybatis02.interceptor.UserInterceptor"/>
	
	<!-- 2、切入点配置 -->
	
	<!-- 3、配置aop -->
	<aop:config expose-proxy="true">
		<aop:pointcut id="pointCut" expression="execution(* *..*service.imp.*.*(..))"  />
		<aop:advisor advice-ref="userInterceptor" pointcut-ref="pointCut"/>
	</aop:config>
	
	<!-- 配置事件监听事件 -->
	<bean id="insertUserListener" class="com.springmybatis02.listener.InsertUserListener"/>
	
</beans>